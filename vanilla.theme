<?php
/**
 * hook_theme_suggestions_HOOK_alter()
 * add in viewmodes for suggestions for taxonomy pages.
*/
function vanilla_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'taxonomy_term__viewmode_' . $variables['elements']['#view_mode'];
  $suggestions[] = $suggestions[0] . '__viewmode_' . $variables['elements']['#view_mode'];
}

function vanilla_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  // kint($variables['element']) ;
  // add viewmodes to the template suggestions
  $suggestions[] = 'field__' .  $variables['element']['#field_type'] . '__viewmode_' . $variables['element']['#view_mode'] ;
  $suggestions[] = 'field__' .  $variables['element']['#field_type'] . '__' . $variables['element']['#bundle'] .'__viewmode_' . $variables['element']['#view_mode'] ;
  $suggestions[] = 'field__' .  $variables['element']['#field_type'] . '__' . $variables['element']['#field_name']  ;

  //field--taxonomy-term--name.html.twig

  // User bundle
  if( $variables['element']['#bundle'] == 'user' ){
    // kint($variables);
    // creates template suggestions
    // field--[bundle]--field--[type]--[viemode]
    // examples:
    // field--user--field--image--compact.html.twig
    // field--user--field--image.html.twig
    $suggestions[] = 'field__' . $variables['element']['#bundle'] .'__field__' . $variables['element']['#field_type'] ;
    $suggestions[] = 'field__' . $variables['element']['#bundle'] .'__field__' . $variables['element']['#field_type'] . '__' . $variables['element']['#view_mode'];
  }
}

function vanilla_theme_suggestions_user_alter(array &$suggestions, array $variables) {
  // @TODO: add a suggestion based on where this user is printed
  // its it a node - is it a comment or the user page

  // add the view mode as a template suggestion
  if( isset($variables['elements']['#view_mode']) ) {
    $suggestions[] = 'user__' . $variables['elements']['#view_mode'];
  }
}

function vanilla_theme_suggestions_container_alter(array &$suggestions, array $variables) {
  // provide a container__[name] template suggestion for containers
  // we use this to remove the front container ex (look in /templates/_cleanup)
  // as well as wrappers on thegoddamn forms

  // this is for form wrappers
  if (isset($variables['element']['#id'])){
    $suggestions[] = 'container__' . $variables['element']['#id'];
  }

  //test if this fucker is always used on forms
  if (isset($variables['element']['widget']['#theme'])){
    $suggestions[] = 'form_container';
  }

  // ex container or actions on forms
  if (isset($variables['element']['#type'])){
    $suggestions[] = 'container__' . $variables['element']['#type'];
  }

  // frontpage content wrapper & others - we used this to remove that wrapper on
  //frontpage and overwrites with /_cleanup/container/frontpage.html.twig
  if (isset($variables['element']['#name'])){
    $suggestions[] = 'container__' . $variables['element']['#name'];
  }
}

function vanilla_theme_suggestions_image_alter(array &$suggestions, array $variables) {
  // @TODO: we need to figure out who calls the image for different template suggestions
}

/*
function vanilla_page_attachments_alter(array &$page) {
  $viewport = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'viewport',
      'content' => 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no',
    ),
  );
  $page['#attached']['html_head'][] = [$viewport, 'viewport'];
}
*/
/*
  hook_preprocess_field()
  https://api.drupal.org/api/drupal/core%21includes%21theme.inc/function/template_preprocess_field/8
*/

// Fields need a bit more brain.
function vanilla_preprocess_field(&$variables, $hook) {
  // kint($variables['element']);
  $element = $variables['element'];

  //Give the field an idea of where they come from
  $variables['bundle'] = $element['#bundle'];
  $variables['view_mode'] = $element['#view_mode'];
}
