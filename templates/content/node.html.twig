{#
{{ node.id }} The node ID.
{{ node.bundle }} The type of the node, for example, "page" or "article".
{{ view_mode }}: View mode; for example, "teaser" or "full".
{{ url }}: Direct URL of the current node.

{{ date }}: Themed creation date field.
{{ node.createdtime }}: Time the node was published formatted in Unix timestamp.
{{ node.changedtime }} Time the node was changed formatted in Unix timestamp.
{{ node.label }}: The title of the node.

{{ metadata }}: Metadata for this node.

{{ author_name }}: Themed author name field.
{{ node.authorid}} The user ID of the node author.

{{ content }}
{{ content.field_example }}
{{ content|without('field_example') }}

{{ teaser }}: Flag for the teaser state. Will be true if view_mode is 'teaser'.
{{ page }}: Flag for the full page state. Will be true if view_mode is 'full'.
{{ readmore }}: Flag for more state - only for teaser
{{ logged_in }}: Flag for authenticated user status.
{{ is_admin }}: Flag for admin user status.
#}

{# heres an example of testing the content type and then add a class for that
  {% if node.bundle =="article" %}
    {% set content_type_class = "article" %}
  {% else %}
    {% set content_type_class = "other-than-article" %}
  {% endif %}
#}
{%
  set classes = [
    'content-type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

<article{{ attributes.addClass('l-fullwidth') }}>
  {#
  node title - if its printed here, remove the title from  blocks
  admin/structure/block/manage/vanilla_page_title
  #}

  {# field--node--field-image.html.twig  #}
  {{ content.field_image }}

  {{ title_prefix }}
    <h1{{ title_attributes.addClass('shady') }}>{{ label }}</h1>
  {{ title_suffix }}


  <footer class="l-pagewidth l-row">
    {# @TODO inject a class to the image ex <img class="round" #}
    {# author_picture "compact" view mode - change in admin/config/people/accounts #}
    {# so it would be cool if we  could grap the picture in any version we want #}
    {{ author_picture }}

    <div{{ author_attributes.addClass('l-12-11') }}>

      {{ metadata }} {# pretty boring  metadata ;) #}

      {# you cant pibe variables inside of trans ex {{ node.createdtime|date("d.m.Y H:m") }} #}
      {# @TODO: just get the user name with nothing else #}

      {{ author_name }}
      |
      @todo: dateicon:
      {{ node.createdtime|date("d.m.Y H:m") }}
      {{ node.changedtime|date("d.m.Y") }}
      -
      @todo tags icon:
      {{ content.field_tags }}
      {{ content.field_section }}
    </div>

      {# date notes
        {{ date }}
        this prints the date based on whatever the config is set to
        change it in :
        admin/config/regional/date-time
        here is formatted with might filters
        http://twig.sensiolabs.org/doc/filters/date.html
        @TODO: where is it we set the formatting for a content type, or is it always
        a specific settings ... oooh the brain dont remembers
        {{ node.createdtime|date("d.m.Y H:m") }}
        {{ node.changedtime|date("d.m.Y") }}
      #}
      {# look at the field--field-tags.html.twig #}


  </footer>

  {{ content.field_teaser }}

  <div{{ content_attributes.addClass('node__content') }}>
    {# print out content without the fields thats printed other places #}
    {#
    @TODO why do we still have 'links' ?
    links can also be removed from the display in
    /admin/structure/types/manage/article/display
    #}
    {{ content|without('field_tags', 'field_image', 'field_section','field_teaser','comment','links') }}

  {# @TODO
  this {{ link( label, url) }}
  gives me this *sigh*
  InvalidArgumentException: The URI '/node/1' is invalid. You must use a valid URI scheme. in Drupal\Core\Url::fromUri() (line 301 of core/lib/Drupal/Core/Url.php).
  #}

{#
somehow fucking devel fucks this over as a permalink ? WTF drupal
  <a href="{{ url }}" title="{{ node.label }}">
    {{ 'Go!'|t }}
    <span class="visually-hidden">{{ node.label }}</span>
  </a> |
 #}
  {# do a test if you can add comments
    the anchor can be adjust at
  #}
  {# number of comments
    @TODO we dont have content.comments on teasers that sucks - there shold be a count somewhere

  #}

  {# <a href="{{ url }}#comments" title="{{'Jump to the first comment'|t}}">
    {{content.comment['#items'].comment_count}}
    {{'comments'|t}}
  </a> |

  {# add new comment  hreflang="{{ node.language.id }}" #}
  <a href="{{ url }}#comments"
    title="{{'comments on this'|t}}">
    {{ 'Add new comment'|t }}
  </a>


  {{ content.comment }}
</article>
