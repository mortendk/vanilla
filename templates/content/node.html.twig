{#
{{ node.id }} The node ID.
{{ node.bundle }} The type of the node, for example, "page" or "article".
{{ view_mode }}: View mode; for example, "teaser" or "full".
{{ url }}: Direct URL of the current node.

{{ date }}: Themed creation date field.
{{ node.createdtime }}: Time the node was published formatted in Unix timestamp.
{{ node.changedtime }} Time the node was changed formatted in Unix timestamp.
{{ node.label }}: The title of the node.

{{ metadata }}: Metadata for this node.

{{ author_name }}: Themed author name field.
{{ node.authorid}} The user ID of the node author.

{{ content }}
{{ content.field_example }}
{{ content|without('field_example') }}

{{ teaser }}: Flag for the teaser state. Will be true if view_mode is 'teaser'.
{{ page }}: Flag for the full page state. Will be true if view_mode is 'full'.
{{ readmore }}: Flag for more state - only for teaser
{{ logged_in }}: Flag for authenticated user status.
{{ is_admin }}: Flag for admin user status.
#}

{# heres an example of testing the content type and then add a class for that #}
{% if node.bundle =="article" %}
  {% set content_type_class = "article" %}
{% else %}
  {% set content_type_class = "other-than-article" %}
{% endif %}

{%
  set classes = [
    content_type_class,
    'content-type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {# this is confusing lets have on for teasers instead
    so if title prefix isnt used unless its a teaser it should be removed
    tfrom here
  #}
  {{ title_suffix }}

  <footer class="node__meta">
    {# how do we inject a class to the image ex <img class="round" #}
    {{ author_picture }} {# "compact" view mode - change in admin/config/people/accounts #}
    {# so it would be cool if we  could grap the picture in any version we want #}
    <div{{ author_attributes.addClass('node__submitted') }}>
      {% trans %}
        {{ author_name }} on {{ date }}
      {% endtrans %}
      {# date notes
        {{ date }}
        this prints the date based on whatever the config is set to
        change it in :
        admin/config/regional/date-time
        @todo: where is it we set the formatting for a content type, or is it always
        a specific settings ... oooh the brain dont remembers
        {{ node.createdtime|date("d.m.Y H:m") }}
        {{ node.changedtime|date("d.m.Y") }}
        here is formatted with might filters
        http://twig.sensiolabs.org/doc/filters/date.html
      #}

      {{ metadata }} {# pretty boring secret metadata ;) #}

      {{ content.field_tags }}
  </footer>
    {#  image #}
    {{ content.field_image }}

  <div{{ content_attributes.addClass('node__content') }}>
    {# print out content without fields that were printing out other places #}
    {{ content|without('field_tags', 'field_image') }}
  </div>


</article>
