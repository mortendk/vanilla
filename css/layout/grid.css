/*
grid system.
Flexbased and all awesome.
*/
* {
  box-sizing: border-box;
  word-wrap: break-word;
}

/**
Tiles
*/
.tiles {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  flex-direction: row;
  min-height: 50px;
}

/* the tile is the central building block */
.tile {
  margin: 0 7px 14px 7px;
  vertical-align: top;
  flex: 0 1 calc(33.33% - 14px); /* Sets default width of a tile */
  min-height: 200px;
  background: lightgray;
  overflow:hidden;

}

/*Tiles nested */
.tile--nested {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  /* overwrites margins to make the tiles as wide as original */
  margin:0 0 0 0;
  /* Remove background if thats set on a tile */
  background: transparent;
}
.tile--nested > .tile{
  background: red;
}

/*
SPLIT
Splitting a tile in columns
should we use the word tile--stack
*/
.tile.tile--split {
  display:flex;
  flex-direction: column;
  flex: 1 1 0;
  /* overwrites margins to make the tiles as wide as original */
  margin: 0 0 0 0;
  /* Remove background if thats set on a tile */
  background: hotpink;
}
.tile.tile--split > .tile {
  background: green;
  /* Corrected the height so it dont follow the tile--[n] */
  /*flex: 1 1 auto;*/
  /*flex-wrap: wrap;*/
  display: flex;
  flex: 1 1 0;
  flex-direction: column; /* we want to make sure it keeps beeing column*/
}

/*
tile widths
	tile--[size]
  tile--[size].tile--nested
*/
.tile--12 {
  flex: 0 1 calc(8.33% - 14px);
}
.tile--12.tile--nested{
  flex: 0 1 8.33%;
}

.tile--11 {
  flex: 0 1 calc(9.09% - 14px);
}
.tile--11.tile--nested{
  flex: 0 1 9%;
}

.tile--10 {
  flex: 0 1 calc(10% - 14px);
}
.tile--10.tile--nested{
  flex: 0 1 10%;
}

.tile--9 {
  flex: 0 1 calc(11.11% - 14px);
}
.tile--9.tile--nested{
  flex: 0 1 11.11%;
}

.tile--8 {
  flex: 0 1 calc(12.5% - 14px);
}
.tile--8.tile--nested{
  flex: 0 1 12.5%;
}

.tile--7{
  flex: 0 1 calc(14.285% - 14px);
}
.tile--7.tile--nested{
  flex: 0 1 14.285%;
}

.tile--6 {
  flex: 0 1 calc(16.66% - 14px);
}
.tile--6.tile--nested {
  flex: 0 1 16.66%;
}

.tile--5 {
  flex: 0 1 calc(20% - 14px);
}
.tile--5.tile--nested {
  flex: 0 1 20%;
}

.tile--4 {
  flex: 0 1 calc(25% - 14px);
}
.tile--4.tile--nested. {
  flex: 0 1 25%
}

.tile--3 {
  flex: 0 1 calc(33.33% - 14px);
}
.tile--3.tile--nested {
  flex: 0 1 33.33%
}

.tile--2 {
  flex: 0 1 calc(50% - 14px);
}
.tile--2.tile--nested {
  flex: 0 1 calc(50%);
}

.tile--1,
.tile--full {
  flex: 0 1 calc(100% - 14px);
}




/*
context based widths.
.[screensize]-[size]-[context]{ }
screensize:
s(mall), m(edium), l(arge).
size is the width (grids) inside of the given context (ex a 12 grid):
ex:
small screen 1 out of 12 wide
*/

/*
Flex utility for quickhacks.
*/

/* flex wrap*/
.u-flex-nowrap{
  -webkit-flex-wrap: nowrap;
  flex-wrap: nowrap;
}
.u-flex-wrap{
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}
/* flex justify */
.u-flex-start{
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}
.u-flex-end{
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}
.u-flex-center{
  -webkit-justify-content: flex-center;
  justify-content: flex-center;
}
.u-flex-space-between{
  -webkit-justify-ncontent: space-between;
  justify-content: space-between;
}
.u-flex-space-around{
  -webkit-justify-ncontent: space-around;
  justify-content: space-around;
}
/* flex direction. */
.u-flex-row{
  flex-direction: row;
}
.u-flex-row-reverse{
  flex-direction: row-reverse;
}
.u-flex-column{
  flex-direction: column;
}
.u-flex-column-reverse{
  flex-direction: column-reverse;
}
/* flex items */
.u-flex-align-start {
  align-items: flex-start;
}
.u-flex-align-end {
  align-items: flex-end;
}
.u-flex-align-center {
  align-items: center;
}
.u-flex-align-baseline {
  align-items: baseline;
}
.u-flex-align-stretch {
  align-items: stretch;
}
